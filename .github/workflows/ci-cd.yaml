name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment:
      name: ${{ (github.ref == 'refs/heads/develop') && 'test' || 'main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker images and run tests
        run: |
          docker-compose -f docker-compose.yaml build
          docker-compose -f docker-compose.yaml -f docker-compose.test.yaml run --rm backend /bin/sh -c "python manage.py test -v3 --noinput"

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: ${{ (github.ref == 'refs/heads/develop') && 'test' || 'main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            echo "${{ secrets.ENV_VARS }}" | tr ';' '\n' > .env
            git pull
            docker compose up -d --build
            docker system prune -fa
